.. currentmodule:: larch

=========================
17: MTC MNL Mode Choice
=========================

.. testsetup:: *

	import larch
	import larch.examples
	import pandas
	pandas.set_option('display.max_columns',999)
	pandas.set_option('expand_frame_repr',False)
	pandas.set_option('precision',4)
	larch._doctest_mode_ = True
	
.. testcode::
	
	d = larch.examples.MTC()
	m = larch.Model(dataservice=d)
	
.. testcode::
	
	m.availability_var = '_avail_'
	m.choice_ca_var = '_choice_'
	
.. testcode::
	
	m.utility_ca = (
		+ P("costbyincome") * X("totcost/hhinc")
		+ P("motorized_time") * X("(altnum <= 4) * tottime")
		+ P("nonmotorized_time") * X("(altnum > 4) * tottime")
		+ P("motorized_ovtbydist") * X("(altnum <=4) * ovtt/dist")
		)

.. testcode::
	
	for a in [4,5,6]:
		m.utility_co[a] = P("hhinc#{}".format(a)) * X("hhinc")
	
	for a,name in m.dataservice.alternative_pairs[1:3]:
		m.utility_co[a] += (
			+ P("vehbywrk_SR") * X("vehbywrk")
			+ P("wkcbd_"+name) * X("wkccbd+wknccbd")
			+ P("wkempden"+name) * X("wkempden")
			+ P("ASC_"+name)
			)
			
	for a,name in m.dataservice.alternative_pairs[3:]:
		m.utility_co[a] += (
			+ P("vehbywrk_"+name) * X("vehbywrk")
			+ P("wkcbd_"+name) * X("wkccbd + wknccbd")
			+ P("wkempden"+name) * X("wkempden")
			+ P("ASC_"+name)
			)
	
.. testcode::
	
	m.title = "MTC Example 17"

.. testcode::
	
	m.ordering = (
		("CostbyInc","costbyincome",),
		("TravelTime",".*time.*",".*dist.*", ),
		("Household","hhinc.*","vehbywrk.*", ),
		("Zonal","wkcbd.*","wkempden.*", ),
		("ASCs","ASC.*",),
		)
		
.. doctest::
	
	>>> m.load_data()
	>>> m.maximize_loglike()
	<...Optimization terminated successfully...>
	>>> m.calculate_parameter_covariance()
	>>> m.loglike()
	-3444.185...
	
The parameters can be found in the `pf` DataFrame::
	
	>>>print(m.pf[['value','std_err','t_stat','robust_std_err','robust_t_stat']])
	                                value    std_err  t_stat  robust_std_err  robust_t_stat
	Category   Parameter                                                                   
	CostbyInc  costbyincome        -0.052  1.040e-02  -5.038       1.334e-02         -3.929
	TravelTime motorized_time      -0.020  3.815e-03  -5.292       3.898e-03         -5.178
	           nonmotorized_time   -0.045  5.769e-03  -7.878       5.760e-03         -7.890
	           motorized_ovtbydist -0.133  1.964e-02  -6.764       2.410e-02         -5.513
	Household  hhinc#4             -0.005  1.977e-03  -2.693       2.047e-03         -2.600
	           hhinc#5             -0.009  5.154e-03  -1.677       5.967e-03         -1.448
	           hhinc#6             -0.006  3.149e-03  -1.905       3.432e-03         -1.748
	           vehbywrk_BIKE       -0.702  2.583e-01  -2.718       3.094e-01         -2.270
	           vehbywrk_SR         -0.317  6.663e-02  -4.752       7.560e-02         -4.189
	           vehbywrk_TRANSIT    -0.946  1.183e-01  -7.999       1.370e-01         -6.908
	           vehbywrk_WALK       -0.722  1.694e-01  -4.261       2.032e-01         -3.552
	Zonal      wkcbd_BIKE           0.489  3.611e-01   1.355       3.665e-01          1.335
	           wkcbd_SR2            0.260  1.234e-01   2.106       1.234e-01          2.106
	           wkcbd_SR3            1.069  1.913e-01   5.591       1.899e-01          5.630
	           wkcbd_TRANSIT        1.309  1.657e-01   7.899       1.585e-01          8.258
	           wkcbd_WALK           0.102  2.521e-01   0.404       2.588e-01          0.393
	           wkempdenBIKE         0.002  1.215e-03   1.587       1.176e-03          1.640
	           wkempdenSR2          0.002  3.904e-04   4.042       4.128e-04          3.822
	           wkempdenSR3          0.002  4.520e-04   4.993       4.537e-04          4.974
	           wkempdenTRANSIT      0.003  3.607e-04   8.684       3.831e-04          8.177
	           wkempdenWALK         0.003  7.421e-04   3.895       7.107e-04          4.067
	ASCs       ASC_BIKE            -1.629  4.274e-01  -3.811       4.861e-01         -3.351
	           ASC_SR2             -1.808  1.061e-01 -17.035       1.170e-01        -15.451
	           ASC_SR3             -3.434  1.519e-01 -22.610       1.557e-01        -22.048
	           ASC_TRANSIT         -0.685  2.478e-01  -2.763       2.690e-01         -2.546
	           ASC_WALK             0.068  3.480e-01   0.196       3.493e-01          0.195
